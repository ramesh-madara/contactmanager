{"version":3,"sources":["context.jsx","components/contacts/Contact.jsx","components/contacts/Contacts.jsx","components/layout/Header.jsx","components/layout/TextInputGroup.jsx","components/contacts/AddContact.jsx","components/pages/About.jsx","components/pages/NotFound.jsx","components/test/Test.jsx","components/contacts/EditContact.jsx","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","response","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onClickDelete","a","delete","name","email","phone","className","style","color","onClick","cursor","bind","float","to","Contacts","Fragment","key","Header","branding","backgroundColor","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","About","href","NotFound","fontWeight","Test","title","body","fetch","then","json","toUpperCase","EditContact","updateContact","match","params","put","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.878f6c07.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact.id !== action.payload\n        ),\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n      };\n\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [\n      // {\n      //   id: 1,\n      //   name: \"john doe\",\n      //   email: \"jdoe@gmail.com\",\n      //   phone: \"000-9999-8888\",\n      // },\n      // {\n      //   id: 2,\n      //   name: \"kathy joel\",\n      //   email: \"kjoel@gmail.com\",\n      //   phone: \"000-9999-8876\",\n      // },\n      // {\n      //   id: 3,\n      //   name: \"fransis pope\",\n      //   email: \"fpope@gmail.com\",\n      //   phone: \"0000-4444-4444\",\n      // },\n    ],\n    dispatch: (action) => {\n      this.setState((state) => reducer(state, action));\n    },\n  };\n\n  async componentDidMount() {\n    const response = await axios.get(\n      \"https://jsonplaceholder.typicode.com/users\"\n    );\n    this.setState({ contacts: response.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false,\n  };\n\n  onClickDelete = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n\n  render() {\n    //DESTRUCTURING\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3 ml-4 mr-4 pb-1 \">\n              <h4 style={{ color: \"#5DA0B5\" }}>\n                {name}\n\n                {/*Toggle function affects the DOM.contactDetails.toggleSwitchText Here */}\n\n                {showContactInfo ? (\n                  <span\n                    onClick={() =>\n                      this.setState({ showContactInfo: !showContactInfo })\n                    }\n                    className=\"badge badge-pill badge-warning badge-sm m-3 \"\n                    style={{ cursor: \"pointer\" }}\n                  >\n                    -\n                  </span>\n                ) : (\n                  <span\n                    onClick={() =>\n                      this.setState({ showContactInfo: !showContactInfo })\n                    }\n                    className=\"badge badge-pill badge-warning badge-sm m-3 \"\n                    style={{ cursor: \"pointer\" }}\n                  >\n                    +\n                  </span>\n                )}\n\n                {/* Delete CONTACT */}\n                <span\n                  onClick={this.onClickDelete.bind(this, id, dispatch)}\n                  className=\"badge badge-pill badge-danger badge-sm m-3\"\n                  style={{ cursor: \"pointer\", float: \"right\" }}\n                >\n                  delete\n                </span>\n\n                <Link to={`contact/edit/${id}`}>\n                  <span\n                    className=\"badge badge-pill badge-primary badge-sm m-3\"\n                    style={{ cursor: \"pointer\", float: \"right\" }}\n                  >\n                    edit\n                  </span>\n                </Link>\n              </h4>\n\n              {/*Toggle function affects the DOM.contactDetails Here */}\n              {showContactInfo ? (\n                <ul style={{ color: \"#666\" }} className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone} </li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {(value) => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h3 className=\" mb-3 ml-4 mr-4 pt-4\">\n                <span style={{ color: \"#5DA0B5\" }}>contact</span>list\n              </h3>\n              {contacts.map((contact) => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n    //DESTRUCTURING\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n// import Navbar from \"react-bootstrap/Navbar\";\n\nconst Header = (props) => {\n  const { branding } = props;\n  return (\n    <nav\n      style={{ backgroundColor: \"#5DA0B5\" }}\n      className=\"navbar navbar-dark navbar-expand-sm justify-content-between mb-3 py-0\"\n    >\n      <div className=\"container\">\n        <Link\n          // style={{ color: \"#00d8d6\" }}\n          to=\"/\"\n          className=\"navbar-brand\"\n        >\n          {branding}\n        </Link>\n\n        <div>\n          <ul className=\"nav  navbar-nav nav-expand-sm mr-auto \">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link \">\n                {\"home <\"}\n              </Link>\n            </li>\n            <li className=\"nav-item \">\n              <Link to=\"/contact/add\" className=\"nav-link \">\n                add +\n              </Link>\n            </li>\n            <li className=\"nav-item \">\n              <Link to=\"/about\" className=\"nav-link \">\n                about ?\n              </Link>\n            </li>\n            <li className=\"nav-item \">\n              <Link to=\"/test\" className=\"nav-link \">\n                #\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"MyApp!\",\n};\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired,\n};\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error,\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error,\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"is-invalid\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\",\n};\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\n// import { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {},\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    //Check for errors!!!\n\n    if (name === \"\") {\n      this.setState({ errors: { name: \"name is required!\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"email is required!\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"phone is required\" } });\n      return;\n    }\n    // dispatch({ type: \"ADD_CONTACT\" });\n\n    const newContact = {\n      // id: uuidv4(),\n      name,\n      email,\n      phone,\n    };\n\n    //http Request\n    const response = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n    dispatch({ type: \"ADD_CONTACT\", payload: response.data });\n\n    // dispatch({ type: \"ADD_CONTACT\", payload: newContact });\n\n    //CLEARING FIELDS POST SUBMISSION\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {},\n    });\n\n    //RETURN HOME AFTER SUBMITING THE THE FORM\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3 ml-4 mr-4\">\n              <div className=\"card-header \">\n                <h5>add contact</h5>\n              </div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"name\"\n                    name=\"name\"\n                    placeholder=\"enter name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n\n                  <TextInputGroup\n                    label=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"enter email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"phone\"\n                    name=\"phone\"\n                    placeholder=\"enter phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React from \"react\";\n\nconst About = (props) => {\n  return (\n    <div>\n      <h1 className=\"display-4 \">About Contact Manager</h1>\n      <h4 className=\"lead\">A simple app to manage your contacts!</h4>\n      <p className=\"text-secondary\">version 1.0.0</p>\n      <br />\n      <p>\n        Made with the help of{\" \"}\n        <a\n          style={{ color: \"#5DA0B5\" }}\n          href=\"https://twitter.com/traversymedia?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor\"\n          target=\"_\"\n        >\n          Brad Traversy\n        </a>{\" \"}\n        /June 2020\n      </p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h5 style={{ color: \"#5DA0B5\" }} className=\"display-4\">\n        404!\n      </h5>\n      <h4 style={{ color: \"#5DA0B5\" }}>Page Not Found.</h4>\n      <p className=\"lead\">\n        Sorry! That page does not exist.\n        <Link style={{ color: \"#5DA0B5\", fontWeight: \"bold\" }} to=\"/\">\n          {\" \"}\n          HOME\n        </Link>\n      </p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nclass Test extends Component {\n  state = {\n    title: \"\",\n    body: \"\",\n  };\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\n      .then((response) => response.json())\n      .then((data) =>\n        this.setState({\n          title: data.title,\n          body: data.body,\n        })\n      );\n  }\n  // componentWillMount() {\n  //   console.log(\"componentWillMount\");\n  // }\n  // componentDidUpdate() {\n  //   console.log(\"componentDidUpdate\");\n  // }\n  // componentWillUpdate() {\n  //   console.log(\"componentWillUpdate\");\n  // }\n  // componentWillReceiveProps() {\n  //   console.log(\"componentWillReceiveProps\");\n  // }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1 style={{ color: \"#5DA0B5\" }}>Test Component</h1>\n        <h5 style={{ color: \"#5DA0B5\" }}>{title.toUpperCase()}</h5>\n        <p className=\"text-dark\">{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\n// import { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {},\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const response = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    //Destructuring contact.data\n    const contact = response.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone,\n    });\n  }\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    //Check for errors!!!\n\n    if (name === \"\") {\n      this.setState({ errors: { name: \"name is required!\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"email is required!\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"phone is required\" } });\n      return;\n    }\n\n    //SUBMIT CHANGES\n    const updateContact = {\n      name,\n      email,\n      phone,\n    };\n    const { id } = this.props.match.params;\n    const response = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updateContact\n    );\n    dispatch({ type: \"UPDATE_CONTACT\", payload: response.data });\n\n    //CLEARING FIELDS POST SUBMISSION\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {},\n    });\n\n    //RETURN HOME AFTER SUBMITING THE THE FORM\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3 ml-4 mr-4\">\n              <div className=\"card-header \">\n                <h5>edit contact</h5>\n              </div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"name\"\n                    name=\"name\"\n                    placeholder=\"enter name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n\n                  <TextInputGroup\n                    label=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"enter email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"phone\"\n                    name=\"phone\"\n                    placeholder=\"enter phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"update contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React, { Component } from \"react\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/layout/Header\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport About from \"./components/pages/About\";\nimport { Provider } from \"./context\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nclass App extends Component {\n  state = {};\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"contact manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts}></Route>\n                <Route exact path=\"/contact/add\" component={AddContact}></Route>\n                <Route\n                  exact\n                  path=\"/contact/edit/:id\"\n                  component={EditContact}\n                ></Route>\n\n                <Route exact path=\"/about\" component={About}></Route>\n                <Route exact path=\"/test\" component={Test}></Route>\n                <Route component={NotFound}></Route>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}